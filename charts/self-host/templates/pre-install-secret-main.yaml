# Display secrets with a pod
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-secret-gen-display"
  labels:
    app.kubernetes.io/component: post-install-hook
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation
    {{- if .Values.argoCDSupport }}
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
    {{ end }}
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}-secret-gen-display"
      labels:
        app.kubernetes.io/component: pre-install-hook
    spec:
      {{- if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name | quote }}
      {{- end }}
      restartPolicy: Never
      containers:
      - name: display-secrets
        command:
        - "/bin/sh"
        - "-c"
        args:
        - |
          echo "###### {{ .Release.Name }} Secrets ######"

          echo "###### Database ######"
          echo "SA_PASSWORD: $SA_PASSWORD"

          echo "###### Bitwarden ######"
          echo "globalSettings__installation__id: $globalSettings__installation__id"
          echo "globalSettings__installation__key: $globalSettings__installation__key"
          {{ if .Values.extensions.dbClient.enabled }}
          echo "###### DB Client ######"
          echo "User: $CB_ADMIN_NAME"
          echo "Password: $CB_ADMIN_PASSWORD"
          {{ end }}
        image: {{ .Values.supportComponents.kubectl.image.name }}:{{ .Values.supportComponents.kubectl.image.tag }}
        envFrom:
        - secretRef:
            name: {{ .Values.secrets.secretName }}
        {{- if .Values.extensions.dbClient.enabled }}
        - secretRef:
            name: {{ template "bitwarden.dbClient" . }}-secret
        {{- end }}


# Create extension secrets
{{- if .Values.extensions.dbClient.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "bitwarden.dbClient" . }}-secret
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: pre-install-hook
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "0"
    {{- if .Values.argoCDSupport }}
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-1"
    {{ end }}
data:
  CB_ADMIN_NAME: {{ "ee" | b64enc | quote }}
  CB_ADMIN_PASSWORD: {{ (randAlphaNum 16) | b64enc | quote }}
{{ end }}


# Create secret for shared cloud resources
# Migrate this to a single secret in AKV once azkv2k8s resolves issue with YAML/JSON mapping

# SMTP Username
---
apiVersion: spv.no/v2beta1
kind: AzureKeyVaultSecret
metadata:
  name: "{{ .Release.Name }}-smtp-username"
  labels:
    app.kubernetes.io/component: pre-install-hook
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "0"
    {{- if .Values.argoCDSupport }}
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-1"
    {{ end }}
spec:
  vault:
    name: {{ .Values.secrets.azureKeyVaultName }}
    object:
      name: shared-globalSettings-mail-smtp-username # name of the akv object
      type: secret
  output:
    secret: 
      name: {{ template "bitwarden.sharedCloudResourcesSecret" . }}
      dataKey: globalSettings__mail__smtp__username

# SMTP Password
---
apiVersion: spv.no/v2beta1
kind: AzureKeyVaultSecret
metadata:
  name: "{{ .Release.Name }}-smtp-password"
  labels:
    app.kubernetes.io/component: pre-install-hook
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "0"
    {{- if .Values.argoCDSupport }}
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-1"
    {{ end }}
spec:
  vault:
    name: {{ .Values.secrets.azureKeyVaultName }}
    object:
      name: shared-globalSettings-mail-smtp-password # name of the akv object
      type: secret
  output:
    secret: 
      name: {{ template "bitwarden.sharedCloudResourcesSecret" . }}
      dataKey: globalSettings__mail__smtp__password

# Yubico Key
---
apiVersion: spv.no/v2beta1
kind: AzureKeyVaultSecret
metadata:
  name: "{{ .Release.Name }}-yubico-key"
  labels:
    app.kubernetes.io/component: pre-install-hook
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "0"
    {{- if .Values.argoCDSupport }}
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-1"
    {{ end }}
spec:
  vault:
    name: {{ .Values.secrets.azureKeyVaultName }}
    object:
      name: shared-globalSettings-yubico-key # name of the akv object
      type: secret
  output:
    secret: 
      name: {{ template "bitwarden.sharedCloudResourcesSecret" . }}
      dataKey: globalSettings__yubico__key

# Yubico clientID
---
apiVersion: spv.no/v2beta1
kind: AzureKeyVaultSecret
metadata:
  name: "{{ .Release.Name }}-yubico-client-id"
  labels:
    app.kubernetes.io/component: pre-install-hook
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "0"
    {{- if .Values.argoCDSupport }}
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-1"
    {{ end }}
spec:
  vault:
    name: {{ .Values.secrets.azureKeyVaultName }}
    object:
      name: shared-globalSettings-yubico-client-id # name of the akv object
      type: secret
  output:
    secret: 
      name: {{ template "bitwarden.sharedCloudResourcesSecret" . }}
      dataKey: globalSettings__yubico__clientId

# Github token
---
apiVersion: spv.no/v2beta1
kind: AzureKeyVaultSecret
metadata:
  name: "{{ .Release.Name }}-github-token"
  labels:
    app.kubernetes.io/component: pre-install-hook
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "0"
    {{- if .Values.argoCDSupport }}
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-1"
    {{ end }}
spec:
  vault:
    name: {{ .Values.secrets.azureKeyVaultName }}
    object:
      name: shared-github-token # name of the akv object
      type: secret
  output:
    secret: 
      name: {{ template "bitwarden.sharedCloudResourcesSecret" . }}
      dataKey: GITHUB_TOKEN

# Shared {{ .Values.secrets.secretName }} secret
# Includes:
# - Installation IDs
# - MSSQL password
---
apiVersion: spv.no/v2beta1
kind: AzureKeyVaultSecret
metadata:
  name: {{ .Values.secrets.secretName }}-installation-id
  labels:
    app.kubernetes.io/component: pre-install-hook
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "0"
    {{- if .Values.argoCDSupport }}
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-1"
    {{ end }}
spec:
  vault:
    name: {{ .Values.secrets.azureKeyVaultName }}
    object:
      name: "shared-globalSettings-installation-id-{{ .Values.general.cloudRegion | lower }}"
      type: secret
  output:
    secret:
      name: {{ .Values.secrets.secretName }}
      dataKey: globalSettings__installation__id
---
apiVersion: spv.no/v2beta1
kind: AzureKeyVaultSecret
metadata:
  name: {{ .Values.secrets.secretName }}-installation-key
  labels:
    app.kubernetes.io/component: pre-install-hook
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "0"
    {{- if .Values.argoCDSupport }}
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-1"
    {{ end }}
spec:
  vault:
    name: {{ .Values.secrets.azureKeyVaultName }}
    object:
      name: "shared-globalSettings-installation-key-{{ .Values.general.cloudRegion | lower }}"
      type: secret
  output:
    secret:
      name: {{ .Values.secrets.secretName }}
      dataKey: globalSettings__installation__key
---
{{- if .Values.database.enabled }}
apiVersion: spv.no/v2beta1
kind: AzureKeyVaultSecret
metadata:
  name: {{ .Values.secrets.secretName }}-mssql-sa-password
  labels:
    app.kubernetes.io/component: pre-install-hook
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "0"
    {{- if .Values.argoCDSupport }}
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-1"
    {{ end }}
spec:
  vault:
    name: {{ .Values.secrets.azureKeyVaultName }}
    object:
      name: shared-mssql-sa-password
      type: secret
  output:
    secret:
      name: {{ .Values.secrets.secretName }}
      dataKey: SA_PASSWORD
{{- end }}

# Shared identity certificate for encryption
{{- if not .Values.general.generateIdentityCertificate }}
---
apiVersion: spv.no/v2beta1
kind: AzureKeyVaultSecret
metadata:
  name: "{{ .Release.Name }}-identity-cert"
  labels:
    app.kubernetes.io/component: pre-install-hook
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "0"
    {{- if .Values.argoCDSupport }}
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-2"
    {{ end }}
spec:
  vault:
    name: {{ .Values.secrets.azureKeyVaultName }}
    object:
      name: shared-identity-cert
      type: secret
  output:
    secret: 
      name: {{ .Release.Name }}-identity-cert
      dataKey: identity.pfx
    transform:
      - base64decode

---
apiVersion: spv.no/v2beta1
kind: AzureKeyVaultSecret
metadata:
  name: "{{ .Release.Name }}-identity-cert-password"
  labels:
    app.kubernetes.io/component: pre-install-hook
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "0"
    {{- if .Values.argoCDSupport }}
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-2"
    {{ end }}
spec:
  vault:
    name: {{ .Values.secrets.azureKeyVaultName }}
    object:
      name: shared-identity-cert-password
      type: secret
  output:
    secret: 
      name: {{ .Release.Name }}-identity-cert-password
      dataKey: globalSettings__identityServer__certificatePassword

{{- end }}